{{ template "validate.config" . }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{ $.Release.Namespace }}
  name: {{ $.Chart.Name }}
  labels:
    app: {{ $.Chart.Name }}
spec:
  selector:
    matchLabels:
      {{- include "dendrite.selectorLabels" . | nindent 6 }}
  replicas: 1
  template:
    metadata:
      labels:
        {{- include "dendrite.selectorLabels" . | nindent 8 }}
    spec:
      volumes:
      - name: {{ .Release.Name }}-conf-vol
        secret:
          secretName: {{ .Release.Name }}-conf
      - name: {{ .Release.Name }}-signing-key
        secret:
          secretName: {{ default (print .Release.Name "-signing-key") $.Values.configuration.signing_key.existingSecret | quote }}
      {{- if (gt (len ($.Files.Glob "appservices/*")) 0) }}
      - name:{{ .Release.Name }}-appservices
        secret:
          secretName: {{ .Release.Name }}-appservices-conf
      {{- end }}
      - name: {{ .Release.Name }}-jetstream
        persistentVolumeClaim:
          claimName: {{ default (print .Release.Name "-jetstream-pvc") $.Values.persistence.jetstream.existingClaim | quote }}
      - name: {{ .Release.Name }}-media
        persistentVolumeClaim:
          claimName: {{ default (print .Release.Name "-media-pvc") $.Values.persistence.media.existingClaim | quote }}
      - name: {{ .Release.Name }}-search
        persistentVolumeClaim:
          claimName: {{ default (print .Release.Name "-search-pvc") $.Values.persistence.search.existingClaim | quote }}
      containers:
      - name: {{ $.Chart.Name }}
        {{- include "image.name" $.Values.image | nindent 8 }}
        args:
          - '--config'
          - '/etc/dendrite/dendrite.yaml'
        ports:
          - name: http
            containerPort: 8008
            protocol: TCP
        {{- if $.Values.configuration.profiling.enabled }}
        env:
          - name: PPROFLISTEN
            value: "localhost:{{- $.Values.configuration.profiling.port -}}"
        {{- end }}
        resources:
        {{- toYaml $.Values.resources | nindent 10 }}
        volumeMounts:
        - mountPath: /etc/dendrite/
          name: {{ .Release.Name }}-conf-vol
        - mountPath: /etc/dendrite/secrets/
          name: {{ .Release.Name }}-signing-key
        {{- if (gt (len ($.Files.Glob "appservices/*")) 0) }}
        - mountPath: /etc/dendrite/appservices
          name: {{ .Release.Name }}-appservices
          readOnly: true
        {{ end }}
        - mountPath: /data/media_store
          name: {{ .Release.Name }}-media
        - mountPath: /data/jetstream
          name: {{ .Release.Name }}-jetstream
        - mountPath: /data/search
          name: {{ .Release.Name }}-search
        livenessProbe:
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 10
          httpGet:
            path: /_dendrite/monitor/health
            port: http
        readinessProbe:
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 10
          httpGet:
            path: /_dendrite/monitor/health
            port: http
        startupProbe:
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 10
          httpGet:
            path: /_dendrite/monitor/up
            port: http